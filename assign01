makeCacheMatrix <- function(matrix) {
  # Initialize the cache
  cached_inverse <- NULL

  # Function to set the matrix
  setMatrix <- function(input_matrix) {
    matrix <<- input_matrix
    # Reset the cached_inverse when the matrix changes
    cached_inverse <<- NULL
  }

  # Function to get the matrix
  getMatrix <- function() {
    return(matrix)
  }

  # Function to calculate and cache the inverse of the matrix
  cacheInverse <- function() {
    if (!is.null(cached_inverse)) {
      # If the inverse is already cached, return it
      message("Retrieving cached inverse")
      return(cached_inverse)
    } else {
      # Calculate the inverse and cache it
      message("Calculating inverse and caching")
      cached_inverse <- solve(matrix)
      return(cached_inverse)
    }
  }

  # Return a list of functions
  return(list(setMatrix = setMatrix, getMatrix = getMatrix, cacheInverse = cacheInverse)
}
